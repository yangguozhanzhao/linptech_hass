import asyncio
import time
import requests


async def test2(i):
    r = await other_test(i)
    print(i, r)


async def other_test(i):
    r = requests.get(i)
    print(i)
    await asyncio.sleep(4)
    print(time.time()-start)
    return r

url = ["https://segmentfault.com/p/1210000013564725",
       "https://www.jianshu.com/p/83badc8028bd",
       "https://www.baidu.com/"]

loop = asyncio.get_event_loop()
task = [asyncio.ensure_future(test2(i)) for i in url]
start = time.time()
loop.run_until_complete(asyncio.wait(task))
endtime = time.time()-start
print(endtime)
loop.close()

a=OrderedDict([('homeassistant', OrderedDict([('name', '领普工厂'), ('latitude', 30.4418011306), ('longitude', 114.4398800908), ('elevation', 0), ('unit_system', 'metric'), ('time_zone', 'Asia/Shanghai'), ('customize', OrderedDict([('light.r1', OrderedDict([('icon', 'mdi:flash')])), ('group.office_light', OrderedDict([('assumed_state', True)])), ('group.modules_light', OrderedDict([('assumed_state', True)])), ('light.r2', OrderedDict([('icon', 'mdi:access-point')])), ('light.2', OrderedDict([('hidden', True)]))])), ('packages', OrderedDict([('pack_1', OrderedDict([('linptech_dongle', OrderedDict([('device', '/dev/tty.SLAB_USBtoUART')])), ('light', [OrderedDict([('platform', 'linptech_receiver'), ('id', 80017337), ('name', 'r1'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', '8001734d'), ('name', 'r5'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017354), ('name', 'r6'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017357), ('name','r2'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', '8001734e'), ('name','r4'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017306), ('name', 'r3'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', '800172f7'), ('name', 'r8'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017315), ('name', 'r9'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017311), ('name', 'r10'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', '8001730b'), ('name', 'r11'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017304), ('name', 'r12'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', '800173ba'), ('name', 'r13'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017309), ('name', 'r14'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80012351), ('name', 2), ('type', '84'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80012351), ('name', 3), ('type', '84'), ('channel', '02')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80012351), ('name', 4), ('type', '84'), ('channel', '04')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80012351), ('name', 5), ('type', '84'), ('channel', '08')])])]))])), ('auth_providers', [OrderedDict([('type', 'homeassistant')])])])), ('auth', {}), ('frontend',{}), ('config', {}), ('http', OrderedDict([('api_password', 87413985), ('server_port', 80), ('trusted_networks', ['127.0.0.1'])])), ('updater', {}), ('conversation', {}), ('history', {}), ('panel_custom', [OrderedDict([('name', 'floorplan'),('sidebar_title', '平面图'), ('sidebar_icon', 'mdi:home'), ('config', OrderedDict([('name', 'Demo Floorplan'), ('image','/local/custom_ui/floorplan/floorplan.svg'), ('stylesheet', '/local/custom_ui/floorplan/floorplan.css'), ('warnings', None), ('date_format', 'DD-MMM-YYYY'), ('last_motion_entity', 'sensor.template_last_motion'), ('last_motion_class', 'last-motion'), ('groups', [OrderedDict([('name', 'Lights'), ('entities', ['light.b1', 'light.r1', 'light.r2', 'light.r3', 'light.r4', 'light.r5', 'light.r6', 'light.r7', 'light.r8', 'light.r9', 'light.r10', 'light.r11', 'light.r12', 'light.r13', 'light.r14', 'group.all_lights', 'group.modules_light', 'group.office_light']), ('states', [OrderedDict([('state', 'on'), ('class', 'light-on')]), OrderedDict([('state', 'off'), ('class', 'light-off')])]), ('action', OrderedDict([('domain', 'homeassistant'), ('service', 'toggle')]))]), OrderedDict([('name', 'Temperature'), ('entities', ['sensor._temperature', 'sensor.weather_temperature']), ('text_template', '${entity.state ? entity.state+"°" : "未知"}'), ('class_template', ' var temp = parseFloat(entity.state); if (temp < 10) return "my-temp-low"; else if (temp < 30) return "my-temp-medium"; else return "my-temp-high"; ')]), OrderedDict([('name', 'Humidity'), ('entities', ['sensor._humidity', 'sensor.weather_humidity']), ('text_template', '${entity.state ? entity.state+"%" : "未知"}')])])]))])]), ('group', OrderedDict([('office_light', OrderedDict([('name', '办公室灯'), ('icon', 'mdi:light'), ('entities', ['light.r1', 'light.r2', 'light.r3', 'light.r4', 'light.r5', 'light.r6'])])), ('modules_light', OrderedDict([('name', '模块车间灯'), ('icon', 'mdi:light'), ('entities', ['light.r7', 'light.r8', 'light.r9', 'light.r10', 'light.r11', 'light.r12', 'light.r13', 'light.r14'])])), ('tab_office', OrderedDict([('view', True), ('name', '办公室'), ('entities', 'group.office_light')])), ('tab_modules', OrderedDict([('view', True), ('name', '模块车间'), ('entities', 'group.modules_light')]))])), ('automation', [OrderedDict([('alias', '1-关闭所有的灯'), ('trigger', [OrderedDict([('platform', 'time'), ('at', '12:30:00')]), OrderedDict([('platform', 'time'), ('at', '17:00:00')])]), ('condition', OrderedDict([('condition', 'time'), ('weekday', ['mon', 'tue', 'wed', 'thu', 'fri'])])), ('action', OrderedDict([('service', 'light.turn_off'), ('entity_id', 'group.all_lights')]))]), OrderedDict([('alias', '2-打开所有的灯'), ('trigger', [OrderedDict([('platform', 'time'), ('at', '08:00:00')]), OrderedDict([('platform', 'time'), ('at', '13:00:00')])]), ('condition', OrderedDict([('condition', 'time'), ('weekday', ['mon', 'tue', 'wed', 'thu', 'fri'])])), ('action', OrderedDict([('service', 'light.turn_on'), ('entity_id', 'group.all_lights')]))])]), ('script', {}), ('linptech_dongle', OrderedDict([('device', '/dev/tty.SLAB_USBtoUART')])), ('light', [OrderedDict([('platform', 'linptech_receiver'), ('id', 80017337), ('name', 'r1'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', '8001734d'), ('name', 'r5'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017354), ('name', 'r6'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017357), ('name', 'r2'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', '8001734e'), ('name', 'r4'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017306), ('name', 'r3'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', '800172f7'), ('name', 'r8'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017315), ('name', 'r9'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017311), ('name', 'r10'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', '8001730b'), ('name', 'r11'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017304), ('name', 'r12'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', '800173ba'), ('name', 'r13'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80017309), ('name', 'r14'), ('type', '81'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80012351), ('name', 2), ('type', '84'), ('channel', '01')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80012351), ('name', 3), ('type', '84'), ('channel', '02')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80012351), ('name', 4), ('type', '84'), ('channel', '04')]), OrderedDict([('platform', 'linptech_receiver'), ('id', 80012351), ('name', 5), ('type', '84'), ('channel', '08')])])])